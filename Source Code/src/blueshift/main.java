/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author umitaksoylu
 */

package blueshift;

import java.awt.AWTException;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import net.sourceforge.tess4j.*;
import java.awt.datatransfer.*;



public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public int X = 100;
    public int Y = 100;
    public int W = 400;
    public int H = 300;
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectorButton = new javax.swing.JButton();
        ScreenShotButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        clipboardButton = new javax.swing.JButton();
        XYWH = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome To BlueShift                  Github.com/Aksoylu/BlueShift");

        selectorButton.setText("Select Capture Area");
        selectorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorButtonActionPerformed(evt);
            }
        });

        ScreenShotButton.setText("Capture Text");
        ScreenShotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScreenShotButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        clipboardButton.setText("Copy to Clipboard");
        clipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clipboardButtonActionPerformed(evt);
            }
        });

        XYWH.setText("X:100, Y:100, W:400, H:300");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScreenShotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aboutButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clipboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(XYWH)
                .addGap(339, 339, 339))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(XYWH)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aboutButton)
                    .addComponent(ScreenShotButton)
                    .addComponent(selectorButton)
                    .addComponent(clipboardButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorButtonActionPerformed
        // TODO add your handling code here:
        boundBox b = new boundBox(this,this.X,this.Y,this.W,this.H);
        b.setLocation(this.X, this.Y);
        b.setSize(this.W, this.H);
        b.setVisible(true);
    }//GEN-LAST:event_selectorButtonActionPerformed

    private void ScreenShotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScreenShotButtonActionPerformed
        try {
            // TODO add your handling code here:
            capture(this.X,this.Y,this.W,this.H);
        } catch (AWTException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ScreenShotButtonActionPerformed

    private void clipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clipboardButtonActionPerformed
        // TODO add your handling code here:
        StringSelection selection = new StringSelection(textArea.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(selection, selection);
    }//GEN-LAST:event_clipboardButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        about a = new about();
        a.setLocation(250, 250);
        a.setDefaultCloseOperation(a.DISPOSE_ON_CLOSE);
        a.setVisible(true);
    }//GEN-LAST:event_aboutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }
    
    void capture(int x, int y, int width, int height) throws AWTException, IOException{
         Robot robot = new Robot();

        // The hard part is knowing WHERE to capture the screen shot from
        BufferedImage screenShot;
        screenShot = robot.createScreenCapture(new Rectangle(x, y, width, height));
        Graphics2D graphics = screenShot.createGraphics();

        // Save your screen shot with its label
        ImageIO.write(screenShot, "jpg", new File("temp.jpg"));
        analyze();
    }
    
    void analyze()
    {
        System.out.println("Started");
        File imageFile = new File("temp.jpg");
        Tesseract instance = new Tesseract();
        instance.setLanguage("tur");
        try {

            String result = instance.doOCR(imageFile);
            textArea.setText(result);

            }
        catch (TesseractException e) {
            System.err.println(e.getMessage());
            }
        
        
        
    }
    
    public void setXYWH(int x, int y, int w,int h)
    {
        this.X =x;
        this.Y =y;
        this.W =w;
        this.H =h;
        String c = "X:" + String.valueOf(x)  + ", Y:" + String.valueOf(y) + ", W:"+ String.valueOf(w) + ", H:"+  String.valueOf(h);
        XYWH.setText(c);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ScreenShotButton;
    private javax.swing.JLabel XYWH;
    private javax.swing.JButton aboutButton;
    private javax.swing.JButton clipboardButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton selectorButton;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
